events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;

  # Allow JD/CV uploads comfortably
  client_max_body_size 25m;

  # WebSocket helper
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream frontend { server frontend:3000; }
  upstream backend  { server backend:8000; }

  # Redirect port 3000 to port 80 (if accessed directly)
  server {
    listen 3000;
    server_name _;
    
    # Add a clear message for users accessing wrong port
    location / {
      add_header Content-Type text/html;
      return 200 '<!DOCTYPE html>
<html>
<head>
  <title>Redirecting to Correct URL</title>
  <meta http-equiv="refresh" content="3;url=http://alphacv.alphadatarecruitment.ae/">
</head>
<body style="font-family: Arial, sans-serif; text-align: center; padding: 50px;">
  <h1>ðŸ”„ Redirecting...</h1>
  <p><strong>Please use the correct URL:</strong></p>
  <p><a href="http://alphacv.alphadatarecruitment.ae/" style="font-size: 20px; color: #007bff;">http://alphacv.alphadatarecruitment.ae/</a></p>
  <p><small>You will be redirected automatically in 3 seconds</small></p>
  <hr>
  <p><strong>Note:</strong> Port 3000 is for development only.<br>
  Use port 80 (no port number) for full functionality.</p>
</body>
</html>';
    }
  }

  server {
    listen 80;
    server_name alphacv.alphadatarecruitment.ae localhost;

    # --- API ---
    # Ensure /api (no slash) redirects correctly
    location = /api {
      return 301 /api/;
    }

    # All backend routes
    location /api/ {
      # Preserve the original /api/... path for FastAPI
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      # Long-running requests (LLM, OCR)
      proxy_read_timeout 600s;
      proxy_send_timeout 600s;
      
      # File upload optimizations
      proxy_request_buffering off;
      proxy_buffering off;
      client_max_body_size 25m;
      proxy_max_temp_file_size 0;
    }

    # Convenience health endpoint -> FastAPI /api/health
    location = /health {
      proxy_pass http://backend/api/health;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Swagger / ReDoc
    location = /docs {
      proxy_pass http://backend/docs;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /redoc {
      proxy_pass http://backend/redoc;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # --- Frontend (everything else) ---
    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
