# ===========================================
# ULTIMATE NGINX CONFIGURATION
# Smart Load Balancing + Category-Based Routing
# ===========================================

user nginx;
worker_processes 2;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1000;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ===========================================
    # PERFORMANCE OPTIMIZATIONS
    # ===========================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # ===========================================
    # GZIP COMPRESSION
    # ===========================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ===========================================
    # RATE LIMITING ZONES
    # ===========================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=match:10m rate=50r/m;
    limit_req_zone $binary_remote_addr zone=category:10m rate=200r/m;
    
    limit_conn_zone $binary_remote_addr zone=conn:10m;
    limit_conn_zone $server_name zone=servers:10m;

    # ===========================================
    # UPSTREAM BACKENDS
    # ===========================================
    upstream backend_pool {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream category_services {
        least_conn;
        server backend:8000 max_fails=2 fail_timeout=10s weight=1;
        keepalive 16;
        keepalive_requests 50;
        keepalive_timeout 30s;
    }

    # ===========================================
    # CACHING CONFIGURATION
    # ===========================================
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/category levels=1:2 keys_zone=category_cache:5m max_size=500m inactive=30m use_temp_path=off;

    # ===========================================
    # MAIN SERVER BLOCK
    # ===========================================
    server {
        listen 80;
        server_name _;
        
        # ===========================================
        # SECURITY HEADERS
        # ===========================================
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";

        # ===========================================
        # CONNECTION LIMITS
        # ===========================================
        limit_conn conn 50;
        limit_conn servers 1000;

        # ===========================================
        # HEALTH CHECK ENDPOINT
        # ===========================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ===========================================
        # CATEGORY-BASED ROUTING
        # ===========================================
        location /categories {
            limit_req zone=category burst=50 nodelay;
            proxy_pass http://category_services;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching
            proxy_cache category_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        location ~ ^/cvs/category/(.+)$ {
            limit_req zone=category burst=20 nodelay;
            proxy_pass http://category_services;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Category $1;
            
            # Caching
            proxy_cache category_cache;
            proxy_cache_valid 200 2m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        # ===========================================
        # MATCHING ENDPOINTS
        # ===========================================
        location /match/category-based {
            limit_req zone=match burst=10 nodelay;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for matching operations
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        location /match {
            limit_req zone=match burst=5 nodelay;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ===========================================
        # CV UPLOAD ENDPOINTS
        # ===========================================
        location /upload-cv {
            limit_req zone=upload burst=3 nodelay;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for upload operations
            proxy_connect_timeout 15s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Request size limits
            client_max_body_size 50M;
            client_body_timeout 60s;
        }

        # ===========================================
        # GENERAL API ENDPOINTS
        # ===========================================
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching for GET requests
            proxy_cache api_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ===========================================
        # STATIC FILES AND FRONTEND
        # ===========================================
        location / {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://backend_pool;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Caching for static content
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # ===========================================
        # ERROR PAGES
        # ===========================================
        error_page 429 /429.html;
        error_page 502 503 504 /50x.html;
        
        location = /429.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # ===========================================
    # LOGGING CONFIGURATION
    # ===========================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
}
